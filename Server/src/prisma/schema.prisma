datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String   @id @default(uuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  username     String   @db.VarChar(255)
  email        String   @unique
  password     String   @db.VarChar(60)
  firstName    String   @db.VarChar(255)
  refreshToken String?

  teams           Team[]
  favoritePokemon pokemonUserFavorite[]

  @@map("users")
}

model Team {
  id         String   @id @default(uuid())
  name       String   @db.VarChar(255)
  isFavorite Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  User   User   @relation(fields: [userId], references: [id])
  userId String

  pokemon PokemonInTeam[]

  @@map("teams")
}

model Pokemon {
  id        String   @id @default(uuid())
  pokemonId String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  teams         PokemonInTeam[]
  usersFavorite pokemonUserFavorite[]
}

model PokemonInTeam {
  team      Team     @relation(fields: [teamId], references: [id])
  teamId    String
  pokemon   Pokemon  @relation(fields: [pokemonId], references: [id])
  pokemonId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([teamId, pokemonId])
  @@map("pokemonInTeams")
}

model pokemonUserFavorite {
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  pokemon   Pokemon  @relation(fields: [pokemonId], references: [id])
  pokemonId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([userId, pokemonId])
  @@map("pokemonUserFavorite")
}
